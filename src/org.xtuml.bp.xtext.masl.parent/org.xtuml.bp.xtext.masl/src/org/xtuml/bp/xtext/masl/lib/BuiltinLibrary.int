///////////////////////////////////////////////////////////////////////
// primitives and characteristics built-in into the MASL language
///////////////////////////////////////////////////////////////////////

builtin is

	///////////////////////////////////////////////////////////////////
	// built-in primitive types
	///////////////////////////////////////////////////////////////////
	
	builtin character;
	builtin string;
	builtin boolean;
	builtin byte;
	builtin integer;
	builtin long_integer;
	builtin real;
	builtin device;
	builtin duration;
	builtin timestamp;
	builtin timer;
	
	
	
	///////////////////////////////////////////////////////////////////
	// The follwoing types are needed by the typesystem. You cannot
	// define anything to be of these types.
	///////////////////////////////////////////////////////////////////
	
	anonymous builtin any_type;  // the type of 'null', AKA 'instance'
	anonymous builtin no_type; 
	anonymous builtin stream_manipulator_type;
	
	
	
	///////////////////////////////////////////////////////////////////
	// built-in characteristics
	// syntax is
	// <receiver> ' <name> ( <parameters> ) returns <returnType>
	//
	// For instance/value based characteristics, the receiver is in 
	// parentheses for type based characteristics not.
	// There is limited support for type parameters in angular brackets.
	///////////////////////////////////////////////////////////////////
	 
	<T> (T)       'image() return anonymous string;
	<T> T'parse(s: in anonymous string) return anonymous T;

	integer'first return anonymous long_integer;
	integer'last  return anonymous long_integer;
	integer'range return anonymous long_integer;

	<enum E> E'first()             return anonymous long_integer;
	<enum E> E'last()              return anonymous long_integer;
	<enum E> E'size()              return anonymous long_integer;
	<enum E> E'pos(p: in anonymous E)        return anonymous long_integer;
	<enum E> E'value(p: in anonymous string) return anonymous E;
	<enum E> E'range()             return range of integer;
	<enum E> (E)'pred() return anonymous E;
	<enum E> (E)'succ() return anonymous E;
	<enum E> (E)'value() return anonymous long_integer;
	
	(string)'upper()                       return anonymous string;
	(string)'lower()                       return anonymous string;
	(string)'firstcharpos(c: in anonymous character) return anonymous long_integer;
	(string)'first()                       return anonymous long_integer;
	(string)'last()                        return anonymous long_integer;
	(string)'length()                      return anonymous long_integer;
	(string)'range()                       return range of integer;
	(string)'elements()                    return range of character;

	<T> (array (null) of T)'elements()   return range of T;
	<T> (array (null) of T)'length()     return anonymous long_integer;
	<T> (array (null) of T)'first()      return anonymous long_integer;
	<T> (array (null) of T)'last()       return anonymous long_integer;
	<T> (array (null) of T)'range()      return range of integer;
	<T> (array (null) of T)'get_unique() return anonymous set of T;

	<T> (sequence of T)'elements()   return range of T;
	<T> (sequence of T)'length()     return anonymous long_integer;
	<T> (sequence of T)'first()      return anonymous long_integer;
	<T> (sequence of T)'last()       return anonymous long_integer;
	<T> (sequence of T)'range()      return range of integer;
	<T> (sequence of T)'get_unique() return anonymous set of T;
	<T> (sequence of T)'any() 		 return anonymous T;

	<T> (bag of T)'elements()   return range of T;
	<T> (bag of T)'length()     return anonymous long_integer;
	<T> (bag of T)'get_unique() return anonymous set of T;
	<T> (bag of T)'any() 		return anonymous T;
	
	<T> (set of T)'elements() return range of T;
	<T> (set of T)'length()   return anonymous long_integer;
	<T> (set of T)'any() 	  return anonymous T;

	<K,V> (dictionary K of V)'contains(key: in K) return anonymous boolean;
	<K,V> (dictionary K of V)'keys() return anonymous set of K;
	<K,V> (dictionary K of V)'values() return anonymous bag of V;
	<K,V> (dictionary K of V)'length() return anonymous long_integer;
	
	timestamp'now() return anonymous timestamp;
	(timestamp)'date() return anonymous timestamp;
	(timestamp)'time() return anonymous duration;
	(timestamp)'split_y() return anonymous sequence of integer;
	(timestamp)'split_ym() return anonymous sequence of integer;
	(timestamp)'split_ymd() return anonymous sequence of integer;
	(timestamp)'split_yd() return anonymous sequence of integer;
	(timestamp)'split_yw() return anonymous sequence of integer;
	(timestamp)'split_ywd() return anonymous sequence of integer;
	(timestamp)'split_th() return anonymous sequence of integer;
	(timestamp)'split_thm() return anonymous sequence of integer;
	(timestamp)'split_ths() return anonymous sequence of integer;
	(timestamp)'split_fm() return anonymous sequence of integer;
	(timestamp)'split_fmu() return anonymous sequence of integer;
	(timestamp)'split_fmun() return anonymous sequence of integer;
	(timestamp)'split_fmn() return anonymous sequence of integer;
	(timestamp)'split_fu() return anonymous sequence of integer;
	(timestamp)'split_fun() return anonymous sequence of integer;
	(timestamp)'split_fn() return anonymous sequence of integer;
	timestamp'combine_y  (year: in anonymous integer) return anonymous timestamp;
	timestamp'combine_ym (year: in anonymous integer, month_of_year: in anonymous integer) return anonymous timestamp;
	timestamp'combine_ymd(year: in anonymous integer, month_of_year: in anonymous integer, day_of_month: in anonymous integer) return anonymous timestamp;
	timestamp'combine_yd (year: in anonymous integer, day_of_year: in anonymous integer) return anonymous timestamp;
	timestamp'combine_yw (year: in anonymous integer, week_of_year: in anonymous integer) return anonymous timestamp;
	timestamp'combine_ywd(year: in anonymous integer, week_of_year: in anonymous integer, day_of_week: in anonymous integer) return anonymous timestamp;
	timestamp'combine_th (hour_of_day: in anonymous integer) return anonymous timestamp;
	timestamp'combine_thm(hour_of_day: in anonymous integer, minute_of_hour: in anonymous integer) return anonymous timestamp;
	timestamp'combine_ths(hour_of_day: in anonymous integer, minute_of_hour: in anonymous integer, second_of_minute: in anonymous integer) return anonymous timestamp;
	timestamp'combine_fm  (millisecond_of_second: in anonymous integer) return anonymous timestamp;
	timestamp'combine_fmu (millisecond_of_second: in anonymous integer, microsecond_of_millisecond: in anonymous integer) return anonymous timestamp;
	timestamp'combine_fmun(millisecond_of_second: in anonymous integer, microsecond_of_millisecond: in anonymous integer, nanosecond_of_microsecond: in anonymous integer) return anonymous timestamp;
	timestamp'combine_fmn (millisecond_of_second: in anonymous integer, naonsecond_of_millisecond: in anonymous integer) return anonymous timestamp;
	timestamp'combine_fu (microsecond_of_second: in anonymous integer) return anonymous timestamp;
	timestamp'combine_fun(microsecond_of_second: in anonymous integer, nanosecond_of_microsecond: in anonymous integer) return anonymous timestamp;
	timestamp'combine_fn (nanosecond_of_second: in anonymous integer) return anonymous timestamp;
	(timestamp)'add_years(years: in anonymous integer) return anonymous timestamp;
	(timestamp)'add_months(months: in anonymous integer) return anonymous timestamp;
	(timestamp)'year() return anonymous long_integer;
	(timestamp)'month_of_year() return anonymous long_integer;
	(timestamp)'day_of_month() return anonymous long_integer;
	(timestamp)'day_of_year() return anonymous long_integer;
	(timestamp)'week_year() return anonymous long_integer;
	(timestamp)'week_of_year() return anonymous long_integer;
	(timestamp)'day_of_week() return anonymous long_integer;
	(timestamp)'hour_of_day() return anonymous long_integer;
	(timestamp)'minute_of_hour() return anonymous long_integer;
	(timestamp)'second_of_minute() return anonymous long_integer;
	(timestamp)'millisecond_of_second() return anonymous long_integer;
	(timestamp)'microsecond_of_second() return anonymous long_integer;
	(timestamp)'nanosecond_of_second() return anonymous long_integer;
	(timestamp)'microsecond_of_millisecond() return anonymous long_integer;
	(timestamp)'nanosecond_of_millisecond() return anonymous long_integer;
	(timestamp)'nanosecond_of_microsecond() return anonymous long_integer;

	(duration)'split_y() return anonymous sequence of integer;
	(duration)'split_ym() return anonymous sequence of integer;
	(duration)'split_ymd() return anonymous sequence of integer;
	(duration)'split_yd() return anonymous sequence of integer;
	(duration)'split_yw() return anonymous sequence of integer;
	(duration)'split_ywd() return anonymous sequence of integer;
	(duration)'split_th() return anonymous sequence of integer;
	(duration)'split_thm() return anonymous sequence of integer;
	(duration)'split_ths() return anonymous sequence of integer;
	(duration)'split_fm() return anonymous sequence of integer;
	(duration)'split_fmu() return anonymous sequence of integer;
	(duration)'split_fmun() return anonymous sequence of integer;
	(duration)'split_fmn() return anonymous sequence of integer;
	(duration)'split_fu() return anonymous sequence of integer;
	(duration)'split_fun() return anonymous sequence of integer;
	(duration)'split_fn() return anonymous sequence of integer;
	duration'combine_y  (year: in anonymous integer) return anonymous timestamp;
	duration'combine_ym (year: in anonymous integer, month_of_year: in anonymous integer) return anonymous timestamp;
	duration'combine_ymd(year: in anonymous integer, month_of_year: in anonymous integer, day_of_month: in anonymous integer) return anonymous timestamp;
	duration'combine_yd (year: in anonymous integer, day_of_year: in anonymous integer) return anonymous timestamp;
	duration'combine_yw (year: in anonymous integer, week_of_year: in anonymous integer) return anonymous timestamp;
	duration'combine_ywd(year: in anonymous integer, week_of_year: in anonymous integer, day_of_week: in anonymous integer) return anonymous timestamp;
	duration'combine_th (hour_of_day: in anonymous integer) return anonymous timestamp;
	duration'combine_thm(hour_of_day: in anonymous integer, minute_of_hour: in anonymous integer) return anonymous timestamp;
	duration'combine_ths(hour_of_day: in anonymous integer, minute_of_hour: in anonymous integer, second_of_minute: in anonymous integer) return anonymous timestamp;
	duration'combine_fm  (millisecond_of_second: in anonymous integer) return anonymous timestamp;
	duration'combine_fmu (millisecond_of_second: in anonymous integer, microsecond_of_millisecond: in anonymous integer) return anonymous timestamp;
	duration'combine_fmun(millisecond_of_second: in anonymous integer, microsecond_of_millisecond: in anonymous integer, nanosecond_of_microsecond: in anonymous integer) return anonymous timestamp;
	duration'combine_fmn (millisecond_of_second: in anonymous integer, naonsecond_of_millisecond: in anonymous integer) return anonymous timestamp;
	duration'combine_fu (microsecond_of_second: in anonymous integer) return anonymous timestamp;
	duration'combine_fun(microsecond_of_second: in anonymous integer, nanosecond_of_microsecond: in anonymous integer) return anonymous timestamp;
	duration'combine_fn (nanosecond_of_second: in anonymous integer) return anonymous timestamp;
	(duration)'day_of_week() return anonymous long_integer;
	(duration)'hour_of_day() return anonymous long_integer;
	(duration)'minute_of_hour() return anonymous long_integer;
	(duration)'second_of_minute() return anonymous long_integer;
	(duration)'millisecond_of_second() return anonymous long_integer;
	(duration)'microsecond_of_second() return anonymous long_integer;
	(duration)'nanosecond_of_second() return anonymous long_integer;
	(duration)'microsecond_of_millisecond() return anonymous long_integer;
	(duration)'nanosecond_of_millisecond() return anonymous long_integer;
	(duration)'nanosecond_of_microsecond() return anonymous long_integer;
	duration'days(days: in anonymous real) return anonymous duration;
	duration'hours(hours: in anonymous real) return anonymous duration;
	duration'minutes(minutes: in anonymous real) return anonymous duration;
	duration'seconds(seconds: in anonymous real) return anonymous duration;
	duration'milliseconds(milliseconds: in anonymous real) return anonymous duration;
	duration'microseconds(microseconds: in anonymous real) return anonymous duration;
	duration'nanoseconds(nanoseconds: in anonymous real) return anonymous duration;
	(duration)'weeks() return anonymous long_integer;
	(duration)'days() return anonymous long_integer;
	(duration)'hours() return anonymous long_integer;
	(duration)'minutes() return anonymous long_integer;
	(duration)'seconds() return anonymous long_integer;
	(duration)'milliseconds() return anonymous long_integer;
	(duration)'microseconds() return anonymous long_integer;
	(duration)'nanoseconds() return anonymous long_integer;

	(timer)'expired()      return anonymous boolean;
	(timer)'expired_at()   return anonymous timestamp;
	(timer)'scheduled()    return anonymous boolean;
	(timer)'scheduled_at() return anonymous timestamp;
	(timer)'missed()       return anonymous long_integer;
	(timer)'delta()        return anonymous duration;
	
	///////////////////////////////////////////////////////////////////
	// built-in exceptions
	///////////////////////////////////////////////////////////////////

	public exception program_error;
	public exception deadlock_error;
	public exception storage_error;
	public exception constraint_error;
	public exception relationship_error;
	public exception referential_access_error;
	public exception iop_error;
	public exception io_error;
	
end builtin;
	